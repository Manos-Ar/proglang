(*5.1:*)

 fun cube(a)=a*a*a;


(*5.2:*)

 fun cubereal(a:real)=a*a*a;

(*5.3:*)

 fun fourth(a)=hd(tl(tl(tl(a))));

(*5.4:*)

 fun min_of_3(a,b,c)=
 if a<b andalso a<c then a
 else
 if b<c then b
 else c
 ;

(*5.5:*)

 fun cut_2nd(a,b,c)=
 (#1(a,b,c),#3(a,b,c));

(*5.6:*)

fun third_char(a)=
 hd(tl(tl(explode(a))));

(*5.7:*)

 fun cycle_1st(a)=
 tl(a)@[hd(a)];

(*5.8:*)

fun sort_3(a,b,c:real)=
 if a<b andalso a<c then
 if b<c then [a,b,c]
 else [a,c,b]
 else
 if b<c then
 if a<c then [b,a,c]
 else [b,c,a]
 else
if a<b then [c,a,b]
 else [c,b,a];

(*5.9:*)

fun delete_3rd(a)=
[hd(a)]@[hd(tl(a))]@tl(tl(tl(a)));

(*5.10:*)

fun square_sum(a)=
if a=1 then 1
else a*a+square_sum(a-1);

(*5.11:*)

fun cycle_over(L,n)=
if n=0 then L
else cycle_over(cycle_1st(L),n-1);

(*5.12:*)

fun power(a,b)=
if b=0 then 1.0
else a*power(a,b-1);

(*5.13:*)

fun help(L,x)=
if null L then x
else
if x>hd L then help(tl L, x)
 else help(tl L, hd L)
 ;
fun max(L)=
 help(tl L, hd L);

(*5.14:*)

 fun maxDiv(n,d)=
 if n mod d = 0 then d
 else maxDiv(n,d-1);
 fun isPrime(n)=
 if n=1 then false
 else if maxDiv(n,n div 2)=1 then true
 else false;

(*5.15:*)

 fun select(L,f)=
 if null L then nil
 else if f(hd(L)) then hd(L)::select(tl(L),f)
 else select(tl(L),f);